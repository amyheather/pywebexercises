[
  {
    "objectID": "pages/exercises.html",
    "href": "pages/exercises.html",
    "title": "Exercises",
    "section": "",
    "text": "This page demonstrates the functionality available in pywebexercises:\nFirst, you need to have followed the set-up instructions in the “Setup” page.\nThen, import the exercise functions we are going to use…\n# pylint: disable=missing-module-docstring\nfrom pywebexercises.exercises import mcq, longmcq, torf\nImportant: When using these functions, set #| echo: false to prevent the code from showing in your document."
  },
  {
    "objectID": "pages/exercises.html#mcq",
    "href": "pages/exercises.html#mcq",
    "title": "Exercises",
    "section": "MCQ",
    "text": "MCQ\nThe mcq() function will produce a drop-down box.\n\n\n\n\n\n\nHow many legs does a spider have?\n\n\n\n\n\n138200\n\n\n\n\nThis was generated by running:\n\nmcq({\n    '1': 0,\n    '3': 0,\n    '8': 1,\n    '200': 0\n})"
  },
  {
    "objectID": "pages/exercises.html#longmcq",
    "href": "pages/exercises.html#longmcq",
    "title": "Exercises",
    "section": "LongMCQ",
    "text": "LongMCQ\nThe longmcq() function will produce radio buttons.\n\n\n\n\n\n\nHow many legs does a spider have?\n\n\n\n\n\n 1 3 8 200\n\n\n\n\nThis was generated by running:\n\nlongmcq({\n    '1': 0,\n    '3': 0,\n    '8': 1,\n    '200': 0\n})"
  },
  {
    "objectID": "pages/exercises.html#true-or-false",
    "href": "pages/exercises.html#true-or-false",
    "title": "Exercises",
    "section": "True or false",
    "text": "True or false\nThe torf() function can be used to create a drop-down with options of True or False.\n\n\n\n\n\n\nWe live on the planet Mars.\n\n\n\n\n\nTrueFalse\n\n\n\n\nThat was generated by running:\n\ntorf(False)"
  },
  {
    "objectID": "pages/exercises.html#checked-sections",
    "href": "pages/exercises.html#checked-sections",
    "title": "Exercises",
    "section": "Checked sections",
    "text": "Checked sections\nThese are created by making a webex-check section, which will add a button that will only display feedback when pressed.\nYou can also include .webex-box to draw a box around the section.\n:::{.webex-check .webex-box}\n\n# Question/s here\n\n:::\nFor example…\n\n\nUsing webex-check and webex-box\n\nWhat is a baby dog called?\n\n\n kitten puppy\n\n\nWhat is a baby sheep called?\n\n\n lamb calf\n\n\n\n\n\n\nJust using webex-check\n\nWhat is a baby dog called?\n\n\n kitten puppy\n\n\nWhat is a baby sheep called?\n\n\n lamb calf\n\n\n\n\n\n\nJust using webex-box\n\nWhat is a baby dog called?\n\n\n kitten puppy"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Overview",
    "section": "",
    "text": "Python adaptation of the R webexercises package by Dale Barr and Lisa DeBruine:\n\nBarr D, DeBruine L (2023). webexercises: Create Interactive Web Exercises in ‘R Markdown’ (Formerly ‘webex’). R package version 1.1.0.9000, https://github.com/psyteachr/webexercises.\n\nIt has been adapted so that webexercises can be created using Python. These modifications have been made by Amy Heather . The modified work is also licensed under CC BY-SA 4.0.\nPlease use the navigation bar to view:\n\nSet-up. How to get started using pywebexercises, installing the necessary .js and .css files, and including the necessary lines in the quarto front matter.\nExercises. A demonstration of the possible exercise functions."
  },
  {
    "objectID": "pages/setup.html",
    "href": "pages/setup.html",
    "title": "Set-up",
    "section": "",
    "text": "There are two important set-up steps for pywebexercises:"
  },
  {
    "objectID": "pages/setup.html#installing-the-.js-and-.css-files",
    "href": "pages/setup.html#installing-the-.js-and-.css-files",
    "title": "Set-up",
    "section": "Installing the .js and .css files",
    "text": "Installing the .js and .css files\nThe pywebexercises package contains functions which will generate html. This html is processed by two scripts:\n\nwebex.js\nwebex.css\n\nWhich convert the html into interactive questions for users to answer.\nA function is provided to install these files into your current directory into an assets/ folder.\n# pylint: disable=missing-module-docstring\nfrom pywebexercises.setup import setup_webex_assets\n\nsetup_webex_assets()\n\nAlternatively…\nThese files can also be copied from below:\n\n\n\n\n\n\nwebex.js\n\n\n\n\n\n&lt;script&gt;\n\n/*\nAcknowledgments. This file is from webexercises:\n  Barr D, DeBruine L (2023). webexercises: Create Interactive Web Exercises in\n  'R Markdown' (Formerly 'webex'). R package version 1.1.0.9000,\n  https://github.com/psyteachr/webexercises.\n*/\n\n/* update total correct if #webex-total_correct exists */\nupdate_total_correct = function() {\n  console.log(\"webex: update total_correct\");\n\n  var t = document.getElementsByClassName(\"webex-total_correct\");\n  for (var i = 0; i &lt; t.length; i++) {\n    p = t[i].parentElement;\n    var correct = p.getElementsByClassName(\"webex-correct\").length;\n    var solvemes = p.getElementsByClassName(\"webex-solveme\").length;\n    var radiogroups = p.getElementsByClassName(\"webex-radiogroup\").length;\n    var selects = p.getElementsByClassName(\"webex-select\").length;\n\n    t[i].innerHTML = correct + \" of \" + (solvemes + radiogroups + selects) + \" correct\";\n  }\n}\n\n/* webex-solution button toggling function */\nb_func = function() {\n  console.log(\"webex: toggle hide\");\n\n  var cl = this.parentElement.classList;\n  if (cl.contains('open')) {\n    cl.remove(\"open\");\n  } else {\n    cl.add(\"open\");\n  }\n}\n\n/* check answers */\ncheck_func = function() {\n  console.log(\"webex: check answers\");\n\n  var cl = this.parentElement.classList;\n  if (cl.contains('unchecked')) {\n    cl.remove(\"unchecked\");\n    this.innerHTML = \"Hide Answers\";\n  } else {\n    cl.add(\"unchecked\");\n    this.innerHTML = \"Show Answers\";\n  }\n}\n\n/* function for checking solveme answers */\nsolveme_func = function(e) {\n  console.log(\"webex: check solveme\");\n\n  var real_answers = JSON.parse(this.dataset.answer);\n  var my_answer = this.value;\n  var cl = this.classList;\n  if (cl.contains(\"ignorecase\")) {\n    my_answer = my_answer.toLowerCase();\n  }\n  if (cl.contains(\"nospaces\")) {\n    my_answer = my_answer.replace(/ /g, \"\")\n  }\n\n  if (my_answer == \"\") {\n    cl.remove(\"webex-correct\");\n    cl.remove(\"webex-incorrect\");\n  } else if (real_answers.includes(my_answer)) {\n    cl.add(\"webex-correct\");\n    cl.remove(\"webex-incorrect\");\n  } else {\n    cl.add(\"webex-incorrect\");\n    cl.remove(\"webex-correct\");\n  }\n\n  // match numeric answers within a specified tolerance\n  if(this.dataset.tol &gt; 0){\n    var tol = JSON.parse(this.dataset.tol);\n    var matches = real_answers.map(x =&gt; Math.abs(x - my_answer) &lt; tol)\n    if (matches.reduce((a, b) =&gt; a + b, 0) &gt; 0) {\n      cl.add(\"webex-correct\");\n    } else {\n      cl.remove(\"webex-correct\");\n    }\n  }\n\n  // added regex bit\n  if (cl.contains(\"regex\")){\n    answer_regex = RegExp(real_answers.join(\"|\"))\n    if (answer_regex.test(my_answer)) {\n      cl.add(\"webex-correct\");\n    }\n  }\n\n  update_total_correct();\n}\n\n/* function for checking select answers */\nselect_func = function(e) {\n  console.log(\"webex: check select\");\n\n  var cl = this.classList\n\n  /* add style */\n  cl.remove(\"webex-incorrect\");\n  cl.remove(\"webex-correct\");\n  if (this.value == \"answer\") {\n    cl.add(\"webex-correct\");\n  } else if (this.value != \"blank\") {\n    cl.add(\"webex-incorrect\");\n  }\n\n  update_total_correct();\n}\n\n/* function for checking radiogroups answers */\nradiogroups_func = function(e) {\n  console.log(\"webex: check radiogroups\");\n\n  var checked_button = document.querySelector('input[name=' + this.id + ']:checked');\n  var cl = checked_button.parentElement.classList;\n  var labels = checked_button.parentElement.parentElement.children;\n\n  /* get rid of styles */\n  for (i = 0; i &lt; labels.length; i++) {\n    labels[i].classList.remove(\"webex-incorrect\");\n    labels[i].classList.remove(\"webex-correct\");\n  }\n\n  /* add style */\n  if (checked_button.value == \"answer\") {\n    cl.add(\"webex-correct\");\n  } else {\n    cl.add(\"webex-incorrect\");\n  }\n\n  update_total_correct();\n}\n\nwindow.onload = function() {\n  console.log(\"webex onload\");\n  /* set up solution buttons */\n  var buttons = document.getElementsByTagName(\"button\");\n\n  for (var i = 0; i &lt; buttons.length; i++) {\n    if (buttons[i].parentElement.classList.contains('webex-solution')) {\n      buttons[i].onclick = b_func;\n    }\n  }\n\n  var check_sections = document.getElementsByClassName(\"webex-check\");\n  console.log(\"check:\", check_sections.length);\n  for (var i = 0; i &lt; check_sections.length; i++) {\n    check_sections[i].classList.add(\"unchecked\");\n\n    let btn = document.createElement(\"button\");\n    btn.innerHTML = \"Show Answers\";\n    btn.classList.add(\"webex-check-button\");\n    btn.onclick = check_func;\n    check_sections[i].appendChild(btn);\n\n    let spn = document.createElement(\"span\");\n    spn.classList.add(\"webex-total_correct\");\n    check_sections[i].appendChild(spn);\n  }\n\n  /* set up webex-solveme inputs */\n  var solveme = document.getElementsByClassName(\"webex-solveme\");\n\n  for (var i = 0; i &lt; solveme.length; i++) {\n    /* make sure input boxes don't auto-anything */\n    solveme[i].setAttribute(\"autocomplete\",\"off\");\n    solveme[i].setAttribute(\"autocorrect\", \"off\");\n    solveme[i].setAttribute(\"autocapitalize\", \"off\");\n    solveme[i].setAttribute(\"spellcheck\", \"false\");\n    solveme[i].value = \"\";\n\n    /* adjust answer for ignorecase or nospaces */\n    var cl = solveme[i].classList;\n    var real_answer = solveme[i].dataset.answer;\n    if (cl.contains(\"ignorecase\")) {\n      real_answer = real_answer.toLowerCase();\n    }\n    if (cl.contains(\"nospaces\")) {\n      real_answer = real_answer.replace(/ /g, \"\");\n    }\n    solveme[i].dataset.answer = real_answer;\n\n    /* attach checking function */\n    solveme[i].onkeyup = solveme_func;\n    solveme[i].onchange = solveme_func;\n\n    solveme[i].insertAdjacentHTML(\"afterend\", \" &lt;span class='webex-icon'&gt;&lt;/span&gt;\")\n  }\n\n  /* set up radiogroups */\n  var radiogroups = document.getElementsByClassName(\"webex-radiogroup\");\n  for (var i = 0; i &lt; radiogroups.length; i++) {\n    radiogroups[i].onchange = radiogroups_func;\n  }\n\n  /* set up selects */\n  var selects = document.getElementsByClassName(\"webex-select\");\n  for (var i = 0; i &lt; selects.length; i++) {\n    selects[i].onchange = select_func;\n    selects[i].insertAdjacentHTML(\"afterend\", \" &lt;span class='webex-icon'&gt;&lt;/span&gt;\")\n  }\n\n  update_total_correct();\n}\n\n&lt;/script&gt;\n\n\n\n\n\n\n\n\n\nwebex.css\n\n\n\n\n\n/*\nAcknowledgments. This file is from webexercises:\n  Barr D, DeBruine L (2023). webexercises: Create Interactive Web Exercises in\n  'R Markdown' (Formerly 'webex'). R package version 1.1.0.9000,\n  https://github.com/psyteachr/webexercises.\n*/\n\n:root {\n  --incorrect: #983E82;\n  --incorrect_alpha: #edaddd;\n  --correct: #59935B;\n  --correct_alpha: #c0edc2;\n  --highlight: #467AAC;\n}\n\n.webex-check {}\n\n.webex-box {\n  border: 2px solid var(--highlight);\n  padding: 0.5em 0.25em;\n  margin: 1em 0;\n  border-radius: .25em;\n  background-color: rgba(127, 127, 127, 0.05);\n}\n\n.webex-total_correct {\n  margin-left: 1em;\n}\n\n.unchecked .webex-total_correct {\n  display: none;\n}\n\n.unchecked .webex-incorrect,\n.unchecked .webex-correct {\n  border: 2px dotted grey !important;\n  background-color: white !important;\n}\n\n/* styles for webex-solveme */\n.webex-select, input.webex-solveme,\n.unchecked .webex-radiogroup label.webex-incorrect,\n.unchecked .webex-radiogroup label.webex-correct{\n    border: 2px dotted grey;\n    background-color: white;\n    border-radius: 0.25em;\n}\n\n.webex-incorrect,\ninput.webex-solveme.webex-incorrect,\n.webex-radiogroup label.webex-incorrect {\n    border: 2px dotted var(--incorrect);\n    background-color: var(--incorrect_alpha);\n    color: black;\n    border-radius: 0.25em;\n}\n.webex-correct,\ninput.webex-solveme.webex-correct,\n.webex-radiogroup label.webex-correct {\n    border: 2px solid var(--correct);\n    background-color: var(--correct_alpha);\n    color: black;\n    border-radius: 0.25em;\n}\n\n.unchecked .webex-incorrect span::before,\n.unchecked .webex-incorrect + .webex-icon::after,\n.unchecked .webex-correct span::before,\n.unchecked .webex-correct + .webex-icon::after {\n  content: \"  \";\n}\n\n.webex-incorrect span::before,\n.webex-incorrect + .webex-icon::after {\n  content: \"\\274C\\00A0\\00A0\";\n  font-family: Arial, sans-serif;\n}\n\n.webex-correct span::before,\n.webex-correct + .webex-icon::after {\n  content: \"\\2705\\00A0\\00A0\";\n}\n\n\n/* styles for hidden solutions */\n.webex-solution {\n    height: 2.5em;\n    overflow-y: hidden;\n    padding: 0.5em;\n    margin-bottom: 10px;\n}\n.webex-solution.open {\n    height: auto;\n    border: 2px solid var(--highlight);\n    border-radius: 5px;\n}\n.webex-solution button, .webex-check-button {\n    height: 2em;\n    margin-bottom: 0.5em;\n    border-radius: 0.5em;\n    background-color: var(--highlight);\n    color: white;\n    padding: 0 0.5em;\n}\n.webex-solution pre.sourceCode {\n    border-color: var(--correct);\n}\n\n.webex-radiogroup label {\n  margin-left: 2em;\n  text-indent: -1em;\n  padding-left: 0.5em;\n  font-weight: 400;\n  display: block;\n  border: 2px solid rgba(255, 255, 255, 0);\n  background-color: inherit;\n  border-radius: 0.25em;\n}\n\n.webex-radiogroup label input {\n  position: relative;\n  left: -1em;\n}\n\n.webex-radiogroup {\n  margin: 1em 0;\n}"
  },
  {
    "objectID": "pages/setup.html#front-matter",
    "href": "pages/setup.html#front-matter",
    "title": "Set-up",
    "section": "Front matter",
    "text": "Front matter\nTo render our exercises in our quarto site, we first need to include the following in the front matter of our .qmd file:\nformat: \n  html:\n    css: [assets/webex.css]\n    include-after-body: [assets/webex.js]\n    embed-resources: true \nThe path to the files may be assets/..., or changed to an appropriate path for your project."
  }
]